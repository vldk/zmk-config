/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        TabQ_ESC {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };
    };

    behaviors {
        td_media: tap_dance_media {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MEDIA";
            #binding-cells = <0>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREVIOUS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RWIN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1        &kp N2        &kp N3             &kp N4      &kp N5          &kp N6            &kp N7             &kp N8     &kp N9                &kp N0                 &kp LC(BSPC)
&trans     &kp EXCL      &kp AT        &kp HASH           &kp DOLLAR  &kp PERCENT     &kp CARET         &kp AMPS           &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&trans     &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOLUME_DOWN  &td_media   &kp C_VOL_UP    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL  &kp MINUS             &kp BACKSLASH          &kp GRAVE
                                       &kp LGUI           &trans      &kp SPACE       &kp RET           &trans             &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp F1   &kp F2   &kp F3    &kp F4      &kp F5       &kp PRINTSCREEN  &kp LC(LEFT)  &kp UP     &kp LC(RIGHT)  &kp PG_UP  &kp LC(BSPC)
&trans   &kp F6   &kp F7   &kp F8    &kp F9      &kp F10      &kp INS          &kp LEFT      &kp DOWN   &kp RIGHT      &kp PG_DN  &kp HOME
&trans   &kp F11  &kp F12  &trans    &kp C_MUTE  &kp CAPS     &kp DEL          &kp PLUS      &kp LBRC   &kp RBRC       &kp PIPE   &kp END
                           &kp RALT  &trans      &kp SPACE    &kp RET          &trans        &kp K_APP
            >;
        };

        adjust_layer {
            bindings = <
&out OUT_TOG     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &kp K_CALC         &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &bt BT_NXT
&kp K_SLEEP      &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF    &trans             &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &bt BT_PRV
&rgb_ug RGB_TOG  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_SPD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR    &trans             &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &bt BT_CLR
                                                   &sys_reset       &trans           &trans             &ext_power EP_TOG  &trans           &sys_reset
            >;
        };
    };
};
